// Generated by Dagger (https://dagger.dev).
package com.android.example.myapplication.vital;

import com.android.example.myapplication.repository.VitalRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VitalListViewModel_Factory implements Factory<VitalListViewModel> {
  private final Provider<VitalRepository> repositoryProvider;

  public VitalListViewModel_Factory(Provider<VitalRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public VitalListViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static VitalListViewModel_Factory create(Provider<VitalRepository> repositoryProvider) {
    return new VitalListViewModel_Factory(repositoryProvider);
  }

  public static VitalListViewModel newInstance(VitalRepository repository) {
    return new VitalListViewModel(repository);
  }
}

// Generated by Dagger (https://dagger.dev).
package com.android.example.myapplication.di;

import com.android.example.myapplication.network.VitalService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAlbumServiceFactory implements Factory<VitalService> {
  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvideAlbumServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public VitalService get() {
    return provideAlbumService(retrofitProvider.get());
  }

  public static AppModule_ProvideAlbumServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvideAlbumServiceFactory(retrofitProvider);
  }

  public static VitalService provideAlbumService(Retrofit retrofit) {
    return Preconditions.checkNotNull(AppModule.INSTANCE.provideAlbumService(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
